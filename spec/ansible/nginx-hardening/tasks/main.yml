---
- name: /usr/sbin/nginx should not be worldwide read- or writeable
  file:
    path: "/usr/sbin/nginx"
    mode: "550"
    owner: "root"
    group: "root"

- name: nginx main directory should not be worldwide read- or writeable
  file:
    path: "/etc/nginx"
    mode: "770"
    owner: "root"
    group: "root"

- name: main config file should not be worldwide read- or writeable
  file:
    path: "/etc/nginx/nginx.conf"
    mode: "660"
    owner: "root"
    group: "root"

- name: nginx config directory should not be worldwide read- or writeable
  file:
    path: "/etc/nginx/conf.d"
    mode: "770"
    owner: "root"
    group: "root"

- name: nginx modules directory should not be worldwide read- or writeable
  file:
    path: "/etc/nginx/modules"
    mode: "770"
    owner: "root"
    group: "root"
    recurse: "yes"

- name: log directory should not be worldwide read- or writeable
  file:
    path: "/var/log/nginx"
    mode: "0750"
    owner: "root"
    group: "root"

- name: create additional configuration
  template:
    src: "hardening.conf.j2"
    dest: "/etc/nginx/conf.d/90.hardening.conf"
    mode: "0660"
    owner: "root"
    group: "root"
  notify: restart nginx

- name: set permissions on nginx root directory
  file:
    path: "{{ nginx_root }}"
    mode: "1660"
    owner: "root"
    group: "root"
  notify: restart nginx

- name: add limit_cone_zone in main nginx.conf
  lineinfile:
    dest: "/etc/nginx/nginx.conf"
    regexp: '^\s*limit_conn_zone'
    line: "    limit_conn_zone {{ nginx_limit_conn_zone }};"
    insertafter: "http {"
  notify: restart nginx

- name: append $realip_remote_addr to log_format in main.conf
  lineinfile:
    path: "/etc/nginx/nginx.conf"
    regexp: 'log_format  main'
    line: log_format  main  '$realip_remote_addr $remote_addr - $remote_user [$time_local] "$request"';
    insertafter: "http {"  
  notify: restart nginx

- name: remove disallowed mime types from mime.types file
  lineinfile:
    path: /etc/nginx/mime.types
    state: absent
    regexp: "{{ item | regex_replace('\\W', '\\\\\\g<0>') }}"
  with_items: "{{ nginx_disallowed_mime_type }}"

- name: remove disallowed files
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ nginx_disallowed_file_list }}"

- name: add charset in main nginx.conf
  lineinfile:
    dest: "/etc/nginx/nginx.conf"
    regexp: '^\s*charset'
    line: "    charset {{ charset_required }};"
    insertafter: "http {"
  notify: restart nginx

- name: add client_header_timeout in main nginx.conf
  lineinfile:
    dest: "/etc/nginx/nginx.conf"
    regexp: '^\s*client_header_timeout'
    line: "    client_header_timeout {{ nginx_client_header_timeout }};"
    insertafter: "http {"
  notify: restart nginx

- name: add client_body_timeout in main nginx.conf
  lineinfile:
    dest: "/etc/nginx/nginx.conf"
    regexp: '^\s*client_body_timeout'
    line: "    client_body_timeout {{ nginx_client_body_timeout }};"
    insertafter: "http {"
  notify: restart nginx

- name: set time stamp format in main nginx.conf
  lineinfile:
    dest: "/etc/nginx/nginx.conf"
    regexp: '^\s*env'
    line: "env TZ={{ nginx_time_stamp_format }};"
    insertafter: "pid"
  notify: restart nginx

- name: add server_tokens in main nginx.conf
  lineinfile:
    dest: "/etc/nginx/nginx.conf"
    regexp: '^\s*server_tokens'
    line: "    server_tokens {{ nginx_server_tokens }};"
    insertafter: "http {"
  notify: restart nginx

- name: add ssl_client_certificate in main nginx.conf
  lineinfile:
    dest: "/etc/nginx/nginx.conf"
    regexp: '^\s*ssl_client_certificate'
    line: "    ssl_client_certificate {{ nginx_ssl_client_cert }};"
    insertafter: "http {"
  notify: restart nginx

- name: add client_max_body_size in main nginx.conf
  lineinfile:
    dest: "/etc/nginx/nginx.conf"
    regexp: '^\s*client_max_body_size'
    line: "    client_max_body_size {{ nginx_client_max_body_size }};"
    insertafter: "http {"
  notify: restart nginx

- name: add client_body_buffer_size in main nginx.conf
  lineinfile:
    dest: "/etc/nginx/nginx.conf"
    regexp: '^\s*client_body_buffer_size'
    line: "    client_body_buffer_size {{ nginx_client_body_buffer_size }};"
    insertafter: "http {"
  notify: restart nginx

- name: change keepalive_timeout in main nginx.conf
  lineinfile:
    dest: "/etc/nginx/nginx.conf"
    regexp: '^\s*keepalive_timeout'
    line: "    keepalive_timeout {{ nginx_keepalive_timeout }};"
    insertafter: "http {"
  notify: restart nginx

- name: add ssl_protocols in main nginx.conf
  lineinfile:
    dest: "/etc/nginx/conf.d/90.hardening.conf"
    regexp: '^\s*ssl_protocols'
    line: "    ssl_protocols {{ nginx_ssl_protocols }};"
    insertafter: "server {"
  notify: restart nginx

- name: add ssl_prefer_server_ciphers in main nginx.conf
  lineinfile:
     dest: "/etc/nginx/conf.d/90.hardening.conf"
     regexp: '^\s*ssl_prefer_server_ciphers'
     line: "    ssl_prefer_server_ciphers {{ nginx_ssl_prefer_server_ciphers }};"
     insertafter: "server {"
  notify: restart nginx

- name: add ssl_certificate in main nginx.conf
  lineinfile:
    dest: "/etc/nginx/conf.d/90.hardening.conf"
    regexp: '^\s*ssl_certificate'
    line: "    ssl_certificate {{ nginx_ssl_cert }};"
    insertafter: "server {"
  notify: restart nginx

- name: add ssl_certificate_key in main nginx.conf
  lineinfile:
    dest: "/etc/nginx/conf.d/90.hardening.conf"
    regexp: '^\s*ssl_certificate_key'
    line: "    ssl_certificate_key {{ nginx_ssl_cert_key }};"
    insertafter: "server {"
  notify: restart nginx

- name: add ssl_verify_client in main nginx.conf
  lineinfile:
    dest: "/etc/nginx/conf.d/90.hardening.conf"
    regexp: '^\s*ssl_verify_client'
    line: "    ssl_verify_client {{ nginx_ssl_verify_client }};"
    insertafter: "server {"
  notify: restart nginx

- name: add ssl_verify_depth in main nginx.conf
  lineinfile:
    dest: "/etc/nginx/conf.d/90.hardening.conf"
    regexp: '^\s*ssl_verify_depth'
    line: "    ssl_verify_depth {{ nginx_ssl_verify_depth }};"
    insertafter: "server {"
  notify: restart nginx

- name: add listen in main nginx.conf
  lineinfile:
     dest: "/etc/nginx/conf.d/90.hardening.conf"
     regexp: '^\s*listen'
     line: "    listen {{ nginx_listen }};"
     insertafter: "server {"
  notify: restart nginx

- name: remove default.conf
  file:
    path: "{{ item }}"
    state: absent
  when: nginx_remove_default_site
  notify: restart nginx
  loop:
    - "/etc/nginx/conf.d/default.conf"
    - "/etc/nginx/sites-enabled/default"

- name: generate dh group
  command: "openssl dhparam -out /etc/nginx/dh{{ nginx_dh_size }}.pem {{ nginx_dh_size }}"
  args:
    creates: "/etc/nginx/dh{{ nginx_dh_size }}.pem"
  notify: restart nginx

- name: generate self-signed client ssl certificate
  command: "openssl req -nodes -x509 -subj '/C=US/O=U.S. Government/OU=DoD/CN=DoD' \
  -newkey rsa:4096 -keyout /etc/ssl/nginx-selfsigned-key.pem -out /etc/ssl/nginx-selfsigned.pem -days 365"
  args:
    creates: "/etc/ssl/nginx-selfsigned.pem"
  notify: restart nginx

- name: generate self-signed ssl certificate and key
  command: "openssl req -nodes -x509 -subj '/C=US/O=U.S. Government/OU=DoD/CN=DoD' \
  -newkey rsa:4096 -keyout /etc/ssl/nginx-selfsigned.key -out /etc/ssl/nginx-selfsigned.crt -days 365"
  args:
    creates: "/etc/ssl/nginx-selfsigned.crt"
  notify: restart nginx

- name: the private key should only be readable by owner
  file:
    path: "/etc/ssl/nginx-selfsigned.key"
    mode: "0400"
    owner: "root"
    group: "root"

- name: the crt should only be readable by owner
  file:
    path: "/etc/ssl/nginx-selfsigned.crt"
    mode: "0400"
    owner: "root"
    group: "root"

- name: change configuration in passwd file
  lineinfile:
    dest: "/etc/passwd"
    regexp: '^(.*)root:/bin/bash(.*)$'
    line: '\1root:/usr/sbin/nologin\2'
    backup: yes
    backrefs: yes
  notify: restart nginx
